pub fn process_instruction(opcode: u8, data: &[u8]) -> (usize,String) {
    let mut opbytes = 1; // number of bytes used besides opcode, can return 1,2, or 3
    let operation = match opcode {
        0x00 => String::from("NOP"),
        0x01 => {opbytes=3;format!("LXI B,#${:02x}{:02x}",data[1],data[0])},//"LXI B, nn",
        0x02 => String::from("STAX B"),
        0x03 => String::from("INX B"),
        0x04 => String::from("INR B"),
        0x05 => String::from("DCR B"),
        0x06 => {opbytes=2;format!("MVI B,#${:02x}",data[0])},
        0x07 => String::from("RLC"),
        //NO 0x08
        0x09 => String::from("DAD B"),
        0x0A => String::from("LDAX B"),
        0x0B => String::from("DCX B"),
        0x0C => String::from("INR C"),
        0x0D => String::from("DCR C"),
        0x0E => {opbytes=2;format!("MVI C,#${:02x}",data[0])},
        0x0f => String::from("RRC"),
        //NO 0x10
        0x11 => {opbytes=3;format!("LXI D,#${:02x}{:02x}",data[1],data[0])},
        0x12 => String::from("STAX D"),
        0x13 => String::from("INX D"),
        0x14 => String::from("INR D"),
        0x15 => String::from("DCR D"),
        0x16 => {opbytes=2;format!("MVI D,#${:02x}",data[0])},
        0x17 => String::from("RAL"),
        //NO 0x18
        0x19 => String::from("DAD D"),
        0x1A => String::from("LDAX D"),
        0x1B => String::from("DCX D"),
        0x1C => String::from("INR E"),
        0x1D => String::from("DCR E"),
        0x1E => {opbytes=2;format!("MVI E,#${:02x}",data[0])},
        0x1F => format!("RAR"),
        //NO 0x20
        0x21 => {opbytes=3;format!("LXI D,#${:02x}{:02x}",data[1],data[0])},
        0x22 => {opbytes=3;format!("SHLD #${:02x}{:02x}",data[1],data[0])},
        0x23 => String::from("INX H"),
        0x24 => String::from("INR H"),
        0x25 => String::from("DCR H"),
        0x26 => {opbytes=2;format!("MVI H,#${:02x}",data[0])},
        0x27 => String::from("DAA"),
        //NO 0x28
        0x29 => String::from("DAD H"),
        0x2A => {opbytes=3;format!("LHLD #${:02x}{:02x}",data[1],data[0])},
        0x2B => String::from("DCX H"),
        0x2C => String::from("INR L"),
        0x2D => String::from("DCR L"),
        0x2E => {opbytes=2;format!("MVI L,#${:02x}",data[0])},
        0x2F => String::from("CMA"),
        //NO 0x30
        0x31 => {opbytes=3;format!("LXI SP, #${:02x}{:02x}",data[1],data[0])},
        0x32 => {opbytes=3;format!("STA #${:02x}{:02x}",data[1],data[0])},
        0x33 => String::from("INX SP"),
        0x34 => String::from("INR M"),
        0x35 => String::from("DCR M"),
        0x36 => {opbytes=2;format!("MVI M,#${:02x}",data[0])},
        0x37 => String::from("STC"),
        //NO 0x38
        0x39 => String::from("DAD SP"),
        0x3A => {opbytes=3;format!("LDA #${:02x}{:02x}",data[1],data[0])},
        0x3B => String::from("DCX SP"),
        0x3C => String::from("INR A"),
        0x3D => String::from("DCR A"),
        0x3E => {opbytes=2;format!("MVI A,#${:02x}",data[0])},
        0x3F => String::from("CMC"),
        0x40 => String::from("MOV B,B"),
        0x41 => String::from("MOV B,C"),
        0x42 => String::from("MOV B,D"),
        0x43 => String::from("MOV B,E"),
        0x44 => String::from("MOV B,H"),
        0x45 => String::from("MOV B,L"),
        0x46 => String::from("MOV B,M"),
        0x47 => String::from("MOV B,A"),
        0x48 => String::from("MOV C,B"),
        0x49 => String::from("MOV C,C"),
        0x4A => String::from("MOV C,D"),
        0x4B => String::from("MOV C,E"),
        0x4C => String::from("MOV C,H"),
        0x4D => String::from("MOV C,L"),
        0x4E => String::from("MOV C,M"),
        0x4F => String::from("MOV C,A"),
        0x50 => String::from("MOV D,B"),
        0x51 => String::from("MOV D,C"),
        0x52 => String::from("MOV D,D"),
        0x53 => String::from("MOV D,E"),
        0x54 => String::from("MOV D,H"),
        0x55 => String::from("MOV D,L"),
        0x56 => String::from("MOV D,M"),
        0x57 => String::from("MOV D,A"),
        0x58 => String::from("MOV E,B"),
        0x59 => String::from("MOV E,C"),
        0x5A => String::from("MOV E,D"),
        0x5B => String::from("MOV E,E"),
        0x5C => String::from("MOV E,H"),
        0x5D => String::from("MOV E,L"),
        0x5E => String::from("MOV E,M"),
        0x5F => String::from("MOV E,A"),
        0x60 => String::from("MOV H,B"),
        0x61 => String::from("MOV H,C"),
        0x62 => String::from("MOV H,D"),
        0x63 => String::from("MOV H,E"),
        0x64 => String::from("MOV H,H"),
        0x65 => String::from("MOV H,L"),
        0x66 => String::from("MOV H,M"),
        0x67 => String::from("MOV H,A"),
        0x68 => String::from("MOV L,B"),
        0x69 => String::from("MOV L,C"),
        0x6A => String::from("MOV L,D"),
        0x6B => String::from("MOV L,E"),
        0x6C => String::from("MOV L,H"),
        0x6D => String::from("MOV L,L"),
        0x6E => String::from("MOV L,M"),
        0x6F => String::from("MOV L,A"),
        0x70 => String::from("MOV M,B"),
        0x71 => String::from("MOV M,C"),
        0x72 => String::from("MOV M,D"),
        0x73 => String::from("MOV M,E"),
        0x74 => String::from("MOV M,H"),
        0x75 => String::from("MOV M,L"),
        0x76 => String::from("HLT"),
        0x77 => String::from("MOV M,A"),
        0x78 => String::from("MOV A,B"),
        0x79 => String::from("MOV A,C"),
        0x7A => String::from("MOV A,D"),
        0x7B => String::from("MOV A,E"),
        0x7C => String::from("MOV A,H"),
        0x7D => String::from("MOV A,L"),
        0x7E => String::from("MOV A,M"),
        0x7F => String::from("MOV A,A"),
        0x80 => String::from("ADD B"),
        0x81 => String::from("ADD C"),
        0x82 => String::from("ADD D"),
        0x83 => String::from("ADD E"),
        0x84 => String::from("ADD H"),
        0x85 => String::from("ADD L"),
        0x86 => String::from("ADD M"),
        0x87 => String::from("ADD A"),
        0x88 => String::from("ADC B"),
        0x89 => String::from("ADC C"),
        0x8A => String::from("ADC D"),
        0x8B => String::from("ADC E"),
        0x8C => String::from("ADC H"),
        0x8D => String::from("ADC L"),
        0x8E => String::from("ADC M"),
        0x8F => String::from("ADC A"),
        0x90 => String::from("SUB B"),
        0x91 => String::from("SUB C"),
        0x92 => String::from("SUB D"),
        0x93 => String::from("SUB E"),
        0x94 => String::from("SUB H"),
        0x95 => String::from("SUB L"),
        0x96 => String::from("SUB M"),
        0x97 => String::from("SUB A"),
        0x98 => String::from("SBB B"),
        0x99 => String::from("SBB C"),
        0x9A => String::from("SBB D"),
        0x9B => String::from("SBB E"),
        0x9C => String::from("SBB H"),
        0x9D => String::from("SBB L"),
        0x9E => String::from("SBB M"),
        0x9F => String::from("SBB A"),
        0xA0 => String::from("ANA B"),
        0xA1 => String::from("ANA C"),
        0xA2 => String::from("ANA D"),
        0xA3 => String::from("ANA E"),
        0xA4 => String::from("ANA H"),
        0xA5 => String::from("ANA L"),
        0xA6 => String::from("ANA M"),
        0xA7 => String::from("ANA A"),
        0xA8 => String::from("XRA B"),
        0xA9 => String::from("XRA C"),
        0xAA => String::from("XRA D"),
        0xAB => String::from("XRA E"),
        0xAC => String::from("XRA H"),
        0xAD => String::from("XRA L"),
        0xAE => String::from("XRA M"),
        0xAF => String::from("XRA A"),
        0xB0 => String::from("ORA B"),
        0xB1 => String::from("ORA C"),
        0xB2 => String::from("ORA D"),
        0xB3 => String::from("ORA E"),
        0xB4 => String::from("ORA H"),
        0xB5 => String::from("ORA L"),
        0xB6 => String::from("ORA M"),
        0xB7 => String::from("ORA A"),
        0xB8 => String::from("CMP B"),
        0xB9 => String::from("CMP C"),
        0xBA => String::from("CMP D"),
        0xBB => String::from("CMP E"),
        0xBC => String::from("CMP H"),
        0xBD => String::from("CMP L"),
        0xBE => String::from("CMP M"),
        0xBF => String::from("CMP A"),
        0xC0 => String::from("RNZ"),
        0xC1 => String::from("POP B"),
        0xC2 => {opbytes=3;format!("JNZ #${:02x}{:02x}",data[1],data[0])},
        0xC3 => {opbytes=3;format!("JMP #${:02x}{:02x}",data[1],data[0])},
        0xC4 => {opbytes=3;format!("CNZ #${:02x}{:02x}",data[1],data[0])},
        0xC5 => String::from("PUSH B"),
        0xC6 => {opbytes=2;format!("ADI #${:02x}",data[0])},
        0xC7 => String::from("RST 0"),
        0xC8 => String::from("RZ"),
        0xC9 => String::from("RET"),
        0xCA => {opbytes=3;format!("JZ #${:02x}{:02x}",data[1],data[0])},
        //NO 0xCB
        0xCC => {opbytes=3;format!("CZ #${:02x}{:02x}",data[1],data[0])},
        0xCD => {opbytes=3;format!("CALL #${:02x}{:02x}",data[1],data[0])},
        0xCE => {opbytes=2;format!("ACI #${:02x}",data[0])},
        0xCF => String::from("RST 1"),
        0xD0 => String::from("RNC"),
        0xD1 => String::from("POP D"),
        0xD2 => {opbytes=3;format!("JNC #${:02x}{:02x}",data[1],data[0])},
        0xD3 => {opbytes=2;format!("OUT #${:02x}",data[0])},
        0xD4 => {opbytes=3;format!("CNC #${:02x}{:02x}",data[1],data[0])},
        0xD5 => String::from("PUSH D"),
        0xD6 => {opbytes=2;format!("SUI #${:02x}",data[0])},
        0xD7 => String::from("RST 2"),
        0xD8 => String::from("RC"),
        //NO 0xD9
        0xDA => {opbytes=3;format!("JC #${:02x}{:02x}",data[1],data[0])},
        0xDB => {opbytes=2;format!("IN #${:02x}",data[0])},
        0xDC => {opbytes=3;format!("CC #${:02x}{:02x}",data[1],data[0])},
        //NO 0xDD
        0xDE => {opbytes=2;format!("SBI #${:02x}",data[0])},
        0xDF => String::from("RST 3"),
        0xE0 => String::from("RPO"),
        0xE1 => String::from("POP H"),
        0xE2 => {opbytes=3;format!("JPO #${:02x}{:02x}",data[1],data[0])},
        0xE3 => String::from("XTHL"),
        0xE4 => {opbytes=3;format!("CPO #${:02x}{:02x}",data[1],data[0])},
        0xE5 => String::from("PUSH H"),
        0xE6 => {opbytes=2;format!("ANI #${:02x}",data[0])},
        0xE7 => String::from("RST 4"),
        0xE8 => String::from("RPE"),
        0xE9 => String::from("PCHL"),
        0xEA => {opbytes=3;format!("JPE #${:02x}{:02x}",data[1],data[0])},
        0xEB => String::from("XCHG"),
        0xEC => {opbytes=3;format!("CPE #${:02x}{:02x}",data[1],data[0])},
        //NO 0xED
        0xEE => {opbytes=2;format!("XRI #${:02x}",data[0])},
        0xEF => String::from("RST 5"),
        0xF0 => String::from("RP"),
        0xF1 => String::from("POP PSW"),
        0xF2 => {opbytes=3;format!("JP #${:02x}{:02x}",data[1],data[0])},
        0xF3 => String::from("DI"),
        0xF4 => {opbytes=3;format!("CP #${:02x}{:02x}",data[1],data[0])},
        0xF5 => String::from("PUSH PSW"),
        0xF6 => {opbytes=2;format!("ORI #${:02x}",data[0])},
        0xF7 => String::from("RST 6"),
        0xF8 => String::from("RM"),
        0xF9 => String::from("SPHL"),
        0xFA => {opbytes=3;format!("JM #${:02x}{:02x}",data[1],data[0])},
        0xFB => String::from("EI"),
        0xFC => {opbytes=3;format!("CM #${:02x}{:02x}",data[1],data[0])},
        //NO 0xFD
        0xFE => {opbytes=2;format!("CPI #${:02x}",data[0])},
        0xFF => String::from("RST 7"),
        // ... more opcodes ...
        _ => String::from("Unknown"),
    };
    return (opbytes,operation)
}